package edu.cnm.deepdive.celestialbodies.model.entity;

import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.lang.NonNull;


/**
 * Defines a database entity and REST resource representing the information gathered regarding a
 * user.
 */
@Entity
public class Operator {


  @Id
  @GeneratedValue(generator = "uuid2")
  @GenericGenerator(name = "uuid2", strategy = "uuid2")
  @Column(name = "operator_id", columnDefinition = "CHAR(16) FOR BIT DATA",
      nullable = false, updatable = false)
  private UUID id;

  @NonNull
  @CreationTimestamp
  @Temporal(TemporalType.TIMESTAMP)
  @Column(nullable = false, updatable = false)
  private Date created;

  @NonNull
  @Column(length = 1024, nullable = false, unique = true)
  private String profile;

  @NonNull
  @Column
  private Long auth;

  @NonNull
  @Column
  private Long rating;

  @ManyToMany
  private List<Star> stars = new LinkedList<>();

  /**
   * Returns autogenerated id for a user
   */
  public UUID getId() {
    return id;
  }

  /**
   * Returns a timestamp when the user queried the database.
   */
  public Date getCreated() {
    return created;
  }

  /**
   * Returns profile information about the user.
   */
  public String getProfile() {
    return profile;
  }

  /**
   * Returns {@link List} of queried stars.
   */
  public List<Star> getStars() {
    return stars;
  }

  /**
   * Sets a {@link List} of queried stars
   */
  public void setStars(List<Star> stars) {
    this.stars = stars;
  }

  /**
   * Sets a String of user profile information.
   */
  public void setProfile(String profile) {
    this.profile = profile;
  }

  /**
   * Gets authorization number regarding the user.
   */
  public Long getAuth() {
    return auth;
  }

  /**
   * Sets authorization number regarding the user.
   */
  public void setAuth(Long auth) {
    this.auth = auth;
  }

  /**
   * Gets the rating of a {@link Star} entered by the user.
   */
  public Long getRating() {
    return rating;
  }

  /**
   * Gets the rating of a {@link Star} entered by the user.
   */
  public void setRating(Long rating) {
    this.rating = rating;
  }


}
